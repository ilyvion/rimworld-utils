name: Release Mod Workflow
description: >
  This workflow builds a RimWorld mod and prepares it for release, including creating a
  GitHub release and uploading the mod to the Steam Workshop.

on:
  workflow_call:
    inputs:
      artifact_name:
        type: "string"
        description: "Name of the artifact uploaded in the build step"
        required: true
      mod_name:
        type: "string"
        description: "Name of the mod (used for solution and artifact names)"
        required: true
      rw_versions:
        type: "string"
        description: "RimWorld versions to build for, separated by space (e.g., '1.3 1.4 1.5 1.6')"
        required: true
      solution_configuration:
        type: "string"
        description: "Solution configuration to build"
        default: "Release"
        required: false
      create_release:
        type: "boolean"
        description: "Whether to create a GitHub release"
        default: true
        required: false
      upload_to_steam:
        type: "boolean"
        description: "Whether to upload the mod to Steam Workshop"
        default: true
        required: false

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Set Environment Variables
        shell: bash
        run: |
          echo "mod_path=./${{ inputs.mod_name }}" >> $GITHUB_ENV
          echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
          echo "no_prefix_version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Create Mod Folder
        shell: bash
        run: mkdir -p ${{ env.mod_path }}

      - name: Download Mod Artifacts from Build Step
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ env.mod_path }}

      # We do this step to avoid a "zip bomb" as the zip from the build step
      # has the mod files at the root level, which is not what users generally want.
      - name: Zip Mod
        shell: bash
        run: zip -r ${{ env.mod_path }}.zip ${{ env.mod_path }}/*

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ env.no_prefix_version }}
          path: ${{ env.mod_path }}/CHANGELOG.md

      - name: Converts Markdown to Steam markup
        id: markdown_steam
        uses: ilyvion/steamdown@main
        with:
          markdown: ${{ steps.changelog_reader.outputs.changes }}
          escape-quotes: true

      - name: Create Release
        if: ${{ inputs.create_release }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: Release ${{ env.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: ${{ inputs.create_release }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.mod_path }}.zip
          asset_name: ${{ inputs.mod_name }}-${{ env.version }}.zip
          asset_content_type: application/zip

      - name: Get Mod Item ID
        if: ${{ inputs.upload_to_steam }}
        id: mod_item_id
        run: |
          itemid=$(<"${{ env.mod_path }}/About/PublishedFileId.txt")
          echo "itemid=$itemid" >> "$GITHUB_OUTPUT"

      - name: Upload to Steam Workshop
        if: ${{ inputs.upload_to_steam }}
        uses: ZehMatt/steam-workshop-upload@569de82c2fdf3042af8491379fb698829ba63a9d
        with:
          appid: 294100 # RimWorld
          itemid: ${{ steps.mod_item_id.outputs.itemid }}
          path: ${{ env.mod_path }}
          changenote: ${{ steps.markdown_steam.outputs.steam-markup }}
        env:
          STEAM_USERNAME: ${{ secrets.STEAM_USERNAME }}
          STEAM_PASSWORD: ${{ secrets.STEAM_PASSWORD }}
          STEAM_TFASEED: ${{ secrets.STEAM_TFASEED }}
